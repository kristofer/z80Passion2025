;;; LISP INTERPRETER
;;; NILS M HOLM, 2019, 2020
;;;
;;; IN THE PUBLIC DOMAIN
;;; (CC0 APPLIES WHEN THERE IS NO PUBLIC DOMAIN)
;;;
;;; BASED ON JOHN MCCARTHY'S MICRO MANUAL FOR LISP,
;;; HOPL II PROCEEDINGS, 1978

(SETQ ENV NIL)

(SETQ BINDING
  (LAMBDA (X E)
    (COND ((EQ NIL E) NIL)
          ((EQ X (CAAR E))
            (CAR E))
          (T (BINDING X (CDR E))))))

(SETQ LOOKUP
  (LAMBDA (X E)
    (LABEL ((B (BINDING X E)))
      (COND (B (CADR B))
            (T (LABEL ((B (BINDING X ENV)))
                 (COND (B (CADR B)))))))))

(SETQ EVPROG
  (LAMBDA (P E)
    (COND ((EQ P NIL))
          ((EQ NIL (CDR P))
            (EVAL2 (CAR P) E))
          (T (EVAL2 (CAR P) E)
             (EVPROG (CDR P) E)))))

(SETQ EVCON
  (LAMBDA (C E)
    (COND ((EVAL2 (CAAR C) E)
            (EVPROG (CDAR C) E))
          (T (EVCON (CDR C) E)))))

(SETQ BIND
  (LAMBDA (V A E)
    (COND ((EQ V NIL) E)
          (T (CONS (CONS (CAR V)
                         (CONS (EVAL2 (CAR A) E)
                               NIL))
                   (BIND (CDR V) (CDR A) E))))))

(SETQ BINDSEQ
  (LAMBDA (B E)
    (COND ((EQ B NIL) E)
          (T (BINDSEQ
               (CDR B)
               (CONS (CONS (CAAR B)
                           (CONS (EVAL2 (CADAR B) E E)
                                 NIL))
                     E))))))

(SETQ MODIFY
  (LAMBDA (V X E)
    (LABEL
      ((B (BINDING V E)))
      (COND (B (RPLACA (CDR B) X))
            (T (LABEL
                 ((B (BINDING V ENV)))
                 (COND (B (RPLACA (CDR B) X))
                       (T (SETQ ENV
                                (NCONC (LIST (LIST V X))
                                       ENV))))))))
    V))

(SETQ EVAL2
  (LAMBDA (X E)
    (COND ((EQ X T) T)
          ((ATOM X)
             (LOOKUP X E))
          ((ATOM (CAR X))
            (COND ((EQ (CAR X) (QUOTE QUOTE))
                    (CADR X))
                  ((EQ (CAR X) (QUOTE ATOM))
                    (ATOM (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE EQ))
                    (EQ (EVAL2 (CADR X) E)
                        (EVAL2 (CADR (CDR X)) E)))
                  ((EQ (CAR X) (QUOTE CAR))
                    (CAR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CDR))
                    (CDR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CAAR))
                    (CAAR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CADR))
                    (CADR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CDAR))
                    (CDAR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CAAAR))
                    (CAAAR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CAADR))
                    (CAADR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CADAR))
                    (CADAR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CADDR))
                    (CADDR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CDAAR))
                    (CDAAR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CDADR))
                    (CDADR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CDDAR))
                    (CDDAR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CDDDR))
                    (CDDDR (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE CONS))
                    (CONS (EVAL2 (CADR X) E)
                          (EVAL2 (CADR (CDR X)) E)))
                  ((EQ (CAR X) (QUOTE LIST))
                    (MAPCAR (LAMBDA (X) (EVAL2 X E))
                            (CDR X)))
                  ((EQ (CAR X) (QUOTE NOT))
                    (EQ (EVAL2 (CADR X) E) NIL))
                  ((EQ (CAR X) (QUOTE NULL))
                    (EQ (EVAL2 (CADR X) E) NIL))
                  ((EQ (CAR X) (QUOTE RPLACA))
                    (RPLACA (EVAL2 (CADR X) E)
                            (EVAL2 (CADDR X) E)))
                  ((EQ (CAR X) (QUOTE RPLACD))
                    (RPLACD (EVAL2 (CADR X) E)
                            (EVAL2 (CADDR X) E)))
                  ((EQ (CAR X) (QUOTE REVERSE))
                    (REVERSE (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE NREVERSE))
                    (NREVERSE (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE APPEND))
                    (APPEND (EVAL2 (CADR X) E)
                            (EVAL2 (CADDR X) E)))
                  ((EQ (CAR X) (QUOTE NCONC))
                    (NCONC (EVAL2 (CADR X) E)
                           (EVAL2 (CADDR X) E)))
                  ((EQ (CAR X) (QUOTE EQUAL))
                    (EQUAL (EVAL2 (CADR X) E)
                           (EVAL2 (CADDR X) E)))
                  ((EQ (CAR X) (QUOTE MEMBER))
                    (MEMBER (EVAL2 (CADR X) E)
                            (EVAL2 (CADDR X) E)))
                  ((EQ (CAR X) (QUOTE ASSOC))
                    (ASSOC (EVAL2 (CADR X) E)
                           (EVAL2 (CADDR X) E)))
                  ((EQ (CAR X) (QUOTE IMPLODE))
                    (IMPLODE (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE EXPLODE))
                    (EXPLODE (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE COND))
                    (EVCON (CDR X) E))
                  ((EQ (CAR X) (QUOTE PROGN))
                    (EVPROG (CDR X)))
                  ((EQ (CAR X) (QUOTE LABEL))
                    ((LAMBDA (NE)
                       (EVPROG (CDDR X) NE NE))
                     (BINDSEQ (CADR X) E)))
                  ((EQ (CAR X) (QUOTE PRIN1))
                    (PRIN1 (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE PRINT))
                    (PRINT (EVAL2 (CADR X) E)))
                  ((EQ (CAR X) (QUOTE TERPRI))
                    (TERPRI))
                  ((EQ (CAR X) (QUOTE READ))
                    (READ))
                  ((EQ (CAR X) (QUOTE SETQ))
                    (MODIFY (CADR X) (EVAL2 (CADDR X) E) E))
                  ((EQ (CAR X) (QUOTE LAMBDA))
                    X)
                  ((EQ NIL (CAR X))
                    '*UNDEFINED)
                  (T (EVAL2 (CONS (EVAL2 (CAR X) E)
                                  (CDR X))
                            E))))
          ((EQ (CAAR X) (QUOTE LAMBDA))
            (EVPROG (CDDAR X)
                    (BIND (CADAR X) (CDR X) E))))))

(SETQ EVAL (LAMBDA (X) (EVAL2 X NIL)))

(TERPRI)
(PRINT "LISP INTERPRETER")

(LABEL
  ((LOOP (LAMBDA ()
     (PRINT 'GO)
     (SETQ *EXPR (READ))
     (PRINT 'STOP)
     (COND ((EQ *EXPR '*STOP))
           (T (TERPRI)
              (PRINT (EVAL *EXPR))
              (LOOP))))))
  (LOOP))

*STOP
