;;; LISCMP TEST SUITE
;;; NILS M HOLM, 2020
;;;
;;; IN THE PUBLIC DOMAIN
;;;
;;; WHERE THERE IS NO PUBLIC DOMAIN, THE
;;; CREATIVE COMMONS ZERO (CC0) LICENSE APPLIES

(TERPRI)
(PRINT (QUOTE QUOTE))
(PRINT '(QUOTE ABCDEFGHIJKLMNOPQRSTUVWXYZ))
(PRINT (QUOTE ABCDEFGHIJKLMNOPQRSTUVWXYZ))
(PRINT '(QUOTE 0123456789))
(PRINT (QUOTE 0123456789))
(PRINT '(QUOTE -*-))
(PRINT (QUOTE -*-))
(PRINT '"HELLO, WORLD!")
(PRINT "HELLO, WORLD!")
(PRINT ''T)
(PRINT T)
(PRINT ''NIL)
(PRINT NIL)
(PRINT ''ABBREVIATION)
(PRINT 'ABBREVIATION)

(TERPRI)
(PRINT 'ATOM)
(PRINT '(ATOM 'FOO))
(PRINT (ATOM 'FOO))
(PRINT '(ATOM '(FOO)))
(PRINT (ATOM '(FOO)))
(PRINT '(ATOM T))
(PRINT (ATOM T))
(PRINT '(ATOM NIL))
(PRINT (ATOM NIL))

(TERPRI)
(PRINT 'CONS)
(PRINT '(CONS 'FOO NIL))
(PRINT (CONS 'FOO NIL))
(PRINT '(CONS 'A '(B C)))
(PRINT (CONS 'A '(B C)))
(PRINT '(CONS '(A B) '(C D)))
(PRINT (CONS '(A B) '(C D)))
(PRINT '(CONS 'FOO 'BAR))
(PRINT (CONS 'FOO 'BAR))

(TERPRI)
(PRINT 'CAR)
(PRINT '(CAR '(A B C)))
(PRINT (CAR '(A B C)))
(PRINT '(CAR '(FOO)))
(PRINT (CAR '(FOO)))
(PRINT '(CAR NIL))
(PRINT (CAR NIL))

(TERPRI)
(PRINT 'CDR)
(PRINT '(CDR '(A B C)))
(PRINT (CDR '(A B C)))
(PRINT '(CDR '(FOO)))
(PRINT (CDR '(FOO)))
(PRINT '(CDR NIL))
(PRINT (CDR NIL))

(TERPRI)
(PRINT 'EQ)
(PRINT '(EQ 'FOO 'FOO))
(PRINT (EQ 'FOO 'FOO))
(PRINT '(EQ 'FOO 'BAR))
(PRINT (EQ 'FOO 'BAR))
(PRINT '(EQ T T))
(PRINT (EQ T T))
(PRINT '(EQ T NIL))
(PRINT (EQ T NIL))
(PRINT '(EQ NIL T))
(PRINT (EQ NIL T))
(PRINT '(EQ NIL NIL))
(PRINT (EQ NIL NIL))
(PRINT '(EQ 'FOO '(FOO)))
(PRINT (EQ 'FOO '(FOO)))
(PRINT '(EQ '(FOO) 'FOO))
(PRINT (EQ '(FOO) 'FOO))

(TERPRI)
(PRINT 'LAMBDA)
(PRINT '(LAMBDA (X) X))
(PRINT (LAMBDA (X) X))
(PRINT '((LAMBDA (X) X) 'FOO))
(PRINT ((LAMBDA (X) X) 'FOO))
(PRINT '((LAMBDA (X) (CONS X X)) 'FOO))
(PRINT ((LAMBDA (X) (CONS X X)) 'FOO))
(PRINT '((LAMBDA (X) (CAR (CDR X))) '(FIRST SECOND)))
(PRINT ((LAMBDA (X) (CAR (CDR X))) '(FIRST SECOND)))
(PRINT '((LAMBDA (X Y) (CONS X Y)) 'FIRST 'SECOND))
(PRINT ((LAMBDA (X Y) (CONS X Y)) 'FIRST 'SECOND))
(PRINT '((LAMBDA (X Y Z) (LIST Z Y X)) '1 '2 '3))
(PRINT ((LAMBDA (X Y Z) (LIST Z Y X)) '1 '2 '3))
(PRINT '((LAMBDA X X)))
(PRINT ((LAMBDA X X)))
(PRINT '((LAMBDA X X) '1))
(PRINT ((LAMBDA X X) '1))
(PRINT '((LAMBDA X X) '1 '2))
(PRINT ((LAMBDA X X) '1 '2))
(PRINT '((LAMBDA X X) '1 '2 '3))
(PRINT ((LAMBDA X X) '1 '2 '3))

(TERPRI)
(PRINT 'SETQ)
(PRINT '(PROGN (SETQ FOO 'BAR) FOO))
(PRINT (PROGN (SETQ FOO 'BAR) FOO))
(PRINT '(PROGN (SETQ FOO 'BAZ) FOO))
(PRINT (PROGN (SETQ FOO 'BAZ) FOO))

(PRINT 'LOCAL-SETQ-1)
(PRINT (PROGN (PRINT (SETQ X 'OUTER))
              ((LAMBDA (X) (PRINT X)) 'INNER)
              X))
(PRINT 'LOCAL-SETQ-2)
(PRINT (PROGN (PRINT (SETQ X 'OUTER))
              ((LAMBDA (X) (PRINT X)
                           (SETQ X 'NEW-INNER)
                           (PRINT X))
               'INNER)
              X))

(TERPRI)
(PRINT 'PROGN)
(PRINT '(PROGN '1))
(PRINT (PROGN '1))
(PRINT '(PROGN '1 '2 '3))
(PRINT (PROGN '1 '2 '3))
(PRINT '(PROGN (SETQ X '1) (PRINT X) (SETQ X '2)))
(PRINT (PROGN (SETQ X '1) (PRINT X) (SETQ X '2)))

(TERPRI)
(PRINT 'LABEL)
(PRINT '(LABEL ((A '1)) A))
(PRINT (LABEL ((A '1)) A))
(PRINT '(LABEL ((A '1) (B '2)) (LIST A B)))
(PRINT (LABEL ((A '1) (B '2)) (LIST A B)))
(PRINT '(LABEL ((A '1) (B A) (C B)) C))
(PRINT (LABEL ((A '1) (B A) (C B)) C))
(PRINT '(LABEL ((F (LAMBDA (X) (CONS X X)))) (F 'FOO)))
(PRINT (LABEL ((F (LAMBDA (X) (CONS X X)))) (F 'FOO)))
(PRINT 'MUTUAL-RECURSIVE-LABEL)
(PRINT (LABEL ((F (LAMBDA (X) (COND ((NULL X)) (T (G X)))))
               (G (LAMBDA (X) (F (CDR X)))))
         (F '(1 2 3 4 5 6 7))))

(TERPRI)
(PRINT 'REGRESSION-TESTS)

(PRINT 'R1)
(PRINT ((LAMBDA (Y)
          ; THIS IS NOT A TAIL CALL!
          ((LAMBDA (X) (CONS X Y))
           'FOO))
        'BAR))

(PRINT 'R2)
(PRINT (LABEL
         ((F (LAMBDA (X)
            (COND ((EQ X NIL) NIL)
                     ; THIS IS NOT A TAIL CALL!
                  (T ((LAMBDA (Y)
                        (CONS Y (F (CDR X))))
                      (QUOTE I)))))))
         (F '(A B C D E F G H I))))

(PRINT 'R3)
(PRINT (LABEL ((Y (QUOTE FOO)))
         ; FREE VARIABLE IN MAPPED FUNCTION
         (MAPCAR (LAMBDA (X) (LIST X Y))
                 (QUOTE (A B C)))))

(TERPRI)
'THATS-ALL

*STOP
