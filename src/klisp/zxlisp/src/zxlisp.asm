; VIRTUAL LISP MACHINE KERNEL 
; FOR ZX-SPECTRUM V1.1
; COPYRIGHT EUGENE ZAIKONNIKOV [] SEPT 1998
; MAIN PART OF THE PROGRAM
	
	.ORG	25000
EVAL	LD	HL,EXP
	CALL	TDISP
	CP	NUMB
	JP	Z,SELF
	CP	SYMB
	JP	Z,SELF
	CP	LIST
	JP	Z,SELF
	CP	VAR
	JP	Z,LOOKUP
	CP	PROCX
	JP	Z,PROC
	CP	IF0
	JP	Z,IF1
	CP	COMB
	JP	Z,EVCOMB
SELF	LD	HL,EXP
	LD	DE,VAL
	CALL	COPY
	JP	RETURN
	
; ROUTINE BELOW DIFFERS FROM MIT'S ONE
; ADDITIONAL CDR NECESSARY
PROC	LD	DE,EXP
	LD	HL,EXP
	CALL	CDR
	LD	DE,VAL
	LD	BC,ENV
	LD	A,CLOS
	CALL	TCONS
	JP	RETURN
IF1	LD	DE,VAL
	LD	HL,EXP
	CALL	CDR
	LD	HL,ENV
	LD	DE,CLINK
	LD	BC,CLINK
	CALL	CONS
	LD	HL,VAL
	LD	A,IF2X
	CALL	TCONS
	LD	HL,EXP
	LD	DE,EXP
	CALL	CAR
	JP	EVAL
IF2	LD	HL,CLINK
	LD	DE,EXP 
	CALL	CAR
	LD	DE,CLINK
	CALL	UNCONS
	LD	DE,ENV
	CALL	CAR
	LD	DE,CLINK
	CALL	UNCONS
	LD	HL,VAL
	CALL	NULLP
	LD	HL,EXP
	LD	DE,EXP
	JP	NZ,N1
	CALL	CDR
	JP	EVAL
N1	CALL	CAR
	JP	EVAL
EVCOMB	LD	HL,NIL
	LD	DE,ARGS
	CALL	COPY
EVCOM1		LD	HL,EXP
	CALL	TDISP
	CP	COMB
	JP	Z,EVCOM2
	CP	FCALLX
	JP	Z,FCALL
	CP	CONSX
	JP	Z,PCONS
	CP	CARX
	JP	Z,PCAR
	CP	CDRX
	JP	Z,PCDR
	CP	NULLX
	JP	Z,NULL
	CP	ATOMX
	JP	Z,ATOM
; ADD MORE TYPES HERE
	JP	ERROUT
EVCOM2		LD	HL,ENV
	LD	DE,CLINK
	LD	BC,CLINK
	CALL	CONS
	LD	HL,ARGS
	CALL	CONS
	LD	DE,VAL
	LD	HL,EXP
	CALL	CDR
	LD	HL,VAL
	LD	DE,CLINK
	LD	BC,CLINK
	LD	A,EVC3
	CALL	TCONS
	LD	HL,EXP
	LD	DE,EXP
	CALL	CAR
	JP	EVAL
EVCOM3		LD	HL,CLINK
	LD	DE,EXP
	CALL	CAR
	LD	DE,CLINK
	CALL	UNCONS
	LD	DE,ARGS
	CALL	CAR
	LD	DE,CLINK
	CALL	UNCONS
	LD	DE,ENV
	CALL	CAR
	LD	DE,CLINK
	CALL	UNCONS
	LD	HL,VAL
	LD	DE,ARGS
	LD	BC,ARGS
	CALL	CONS
	JP	EVCOM1
; WARNING: NON-ABSTRACT SECTION
LOOKUP 	LD	BC,(EXP+1)
	PUSH	BC
	LD	B,C
	INC	B
	LD	HL,ENV
	LD	DE,ENV
	JP	START2
N3	CALL	CDR
START2	DJNZ	N3
	CALL	CAR
	POP	BC
	JP	START
N2	CALL	CDR
START	DJNZ	N2
	LD	DE,VAL
	CALL	CAR
	JP	RETURN
FCALL	LD	HL,ARGS
	LD	DE,ARGS
	LD	HL,VAL
	LD	DE,EXP
	CALL	CAR
	LD	DE,VAL
	CALL	CDR
	LD	DE,ENV
	LD	HL,ARGS
	LD	BC,VAL
	CALL	CONS
	JP	EVAL
PCONS	LD	HL,ARGS
	LD	DE,ARGS
	CALL	CDR
	CALL	CAR
	LD	DE,VAL
	LD	BC,VAL
	CALL	CONS
	JP	RETURN
PCAR	LD	HL,VAL
	LD	DE,VAL
	CALL	CAR
	JP	RETURN
PCDR	LD	HL,VAL
	LD	DE,VAL
	CALL	CDR
	JP	RETURN
NULL	LD	HL,VAL
	CALL	NULLP
	JP	RETURN
ATOM	LD	HL,VAL
	CALL	ATOMP
	JP	Z,N4
	LD	DE,VAL
	LD	HL,NIL
	CALL	COPY
	JP	RETURN
N4	LD	A,1
	LD	(VAL+1),A
	JP	RETURN
RETURN	LD	HL,CLINK
	CALL	TDISP
	CP	IF2X
	JP	Z,IF2
	CP	EVC3
	JP	Z,EVCOM3
	JP	ERROUT
ERROUT	 RET

CAR	PUSH	HL
	PUSH	BC
	PUSH	DE
	PUSH	DE
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
	POP	DE
	INC	HL
	INC	HL
	INC	HL
	LD	BC,3
	LDIR
	POP	DE
	POP	BC
	POP	HL
	RET

CDR	PUSH	HL
	PUSH	BC
	PUSH	DE
	PUSH	DE
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
	POP	DE
	LD	BC,3
	LDIR
	POP	DE
	POP	BC
	POP	HL
	RET
	
COPY	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	BC,3
	LDIR
	POP	BC
	POP	DE
	POP	HL
	RET
	
CONS	LD	A,UNDEF
TCONS	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	DE
	PUSH	AF
	CALL	GETCEL
	POP	AF
	PUSH	DE
	PUSH	HL
	PUSH	BC
	POP	HL
	LD	BC,3
	PUSH	BC
	LDIR
	POP	BC
	POP	HL
	LDIR
	POP	DE
	POP	HL
	LD	(HL),A
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	POP	BC
	POP	DE
	POP	HL
	RET
	
TDISP	LD	A,(HL)
	RET
	
NULLP	PUSH	HL
	INC	HL
	LD	A,(HL)
	INC	HL
	OR	(HL)
	POP	HL
	RET
	
ATOMP	LD	A,(HL)
	CP	NUMB
	RET	Z
	CP	SYMB
	RET
	
; REGISTER SET OF THE CONTROLLER
	.ORG	26000

EXP	db	0,0,0
ENV	db	0,0,0
VAL	db	0,0,0
ARGS	db	0,0,0
CLINK	db	0,0,0
FREE	db	0,0,0
	
; SOME OPCODES DEFINED BELOW
NUMB	EQU	6
SYMB	EQU	2
LIST	EQU	3
VAR	EQU	4
PROCX	EQU	5
IF0	EQU	1
CLOS	EQU	7
COMB	EQU	11
FCALLX	EQU	1
CONSX	EQU	2
CARX	EQU	3
CDRX	EQU	4
NULLX	EQU	5
ATOMX	EQU	6
IF2X	EQU	1
EVC3	EQU	2
UNDEF	EQU	9
	
; NULL POINTER DEFINITION
NIL	db	0,0,0
	
HEAPSZ	EQU	300
HEAPST	EQU	8000h

GCINIT		LD	HL,NIL
		LD	DE,HEAPST
		CALL	COPY
		LD	BC,HEAPSZ
MKFREE		LD	(PREV),DE
		OR	A
		LD	HL,6
	ADC	HL,DE
	PUSH	HL
	LD	DE,(PREV)
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	POP	DE
	DEC	BC
	LD	A,B
	OR	C
	JP	NZ,MKFREE
	LD	(FREE+1),DE
	RET
TEMP
PREV	dw	0
	
GETCEL	PUSH	HL
	LD	HL,FREE
	CALL	NULLP
	JP	Z,NRM
	LD	DE,(FREE+1)
	PUSH	DE
	LD	DE,FREE
	CALL	CDR
	POP	DE
	POP	HL
	RET
NRM	POP	HL
	CALL	GC
	CALL	Z,MEMEX
	JP	GETCEL
	
ERRS	db	80h
	db	"NO ROO"
	db	"M"
	db	80h
	
UNCONS		PUSH	HL
	PUSH	DE
	PUSH	HL
	PUSH	DE
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(TEMP),DE
	POP	DE
	POP	HL
	CALL	CDR
	LD	DE,(TEMP)
	LD	HL,(FREE+1)
	LD	(FREE+1),DE
	EX	DE,HL
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	POP	DE
	POP	HL
	RET
	
MEMEX	LD	A,2
	CALL	1601h
	LD	A,0
	LD	DE,ERRS
	CALL	0C0Ah
	POP	HL ;SPARE RET
	RET
	
; SIMPLE MARK&SWEEP GARBAGE COLLECTOR
GC	PUSH	BC
	PUSH	HL
	CALL	MARKHP
	LD	B,5
	LD	HL,EXP
HOP1	CALL	MARK
	INC	HL
	INC	HL
	INC	HL
	DJNZ	HOP1
	CALL	SWEEP
	POP	HL
	POP	BC
	RET
	
MARKHP	LD	HL,HEAPST
	LD	BC,HEAPSZ
	LD	DE,6
HOP2	LD	A,32
	OR	(HL)
	LD	(HL),A
	OR	A
	ADC	HL,DE
	DEC	BC
	LD	A,B
	OR	C
	JP	NZ,HOP2
	RET
	
MARKRT		PUSH	HL
	EX	DE,HL
	LD	A,0dfh
	AND	(HL)
	LD	(HL),A
	BIT	0,(HL)
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	CALL	NZ,MARKRT
	INC	HL
	BIT	0,(HL)
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	CALL	NZ,MARKRT
	POP	HL
	RET
	
MARK	BIT	0,(HL)
	RET	Z
	PUSH	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	CALL	MARKRT
	POP	HL
	RET
	
SWEEP	LD	DE,HEAPST
	LD	BC,HEAPSZ-1
	LD	(PREV),DE
	LD	DE,HEAPST+6
	PUSH	IX
	LD	IX,0
HOP3	LD	A,(DE)
	BIT	5,A
	JP	Z,HOP4
	LD	HL,(PREV)
	EX	DE,HL
	PUSH	HL
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	POP	DE
	LD	(PREV),DE
	INC	IX ;COUNTING FREE MEM
HOP4	OR	A
	LD	HL,6
	ADC	HL,DE
	EX	DE,HL
	DEC	BC
	LD	A,B
	OR	C
	JP	NZ,HOP3
	LD	DE,(PREV)
	LD	(FREE+1),DE
	PUSH	IX
	POP	HL
	LD	A,H
	OR	L
	POP	IX
	RET
	
; TEST EXECUTION ON APPEND
; SEE MIT AI MEMO NO.514
	.ORG	27000
	CALL	GCINIT
	LD	HL,NIL
	LD	DE,ENV
	CALL	COPY
	LD	DE,CLINK
	CALL	COPY
	LD	DE,ARGS
	CALL	COPY
	LD	DE,VAL
	CALL	COPY
	LD	A,COMB
	LD	(EXP),A
	LD	HL,TESTEX
	LD	(EXP+1),HL
	CALL	EVAL
	CALL	GC
	RET
	
; BYTE-CODE FOR THE EXPRESSION
; (APPEND '(A B C) '(D E F))
	.ORG	28000
TESTEX	db	COMB
	dw	TE1
	db	LIST
	dw	TE2
	
TE1	db	COMB
	dw	TE3
	db	LIST
	dw	TE6
	
TE2	db	LIST
	dw	TE4
	db	SYMB
	dw	SMA
	
TE3	db	FCALLX
	dw	0
	db	PROCX
	dw	AP1
	
TE4	db	LIST
	dw	TE5
	db	SYMB
	dw	SMB
	
TE5	db	SYMB
	dw	0
	db	SYMB
	dw	SMC
	
TE6	db	LIST
	dw	TE7
	db	SYMB
	dw	SMD

TE7	db	LIST
	dw	TE8
	db	SYMB
	dw	SME
	
TE8	db	SYMB
	dw	0
	db	SYMB
	dw	SMF
	
AP1	db	IF0
	dw	AP2
	db	0,0,0

AP2	db	LIST
	dw	AP4
	db	COMB
	dw	AP3
	
AP3	db	ATOMX
	dw	0
	db	VAR
	db	0,3
	
AP4	db	COMB
	dw	AP5
	db	VAR
	db	0,2

AP5	db	COMB
	dw	AP6
	db	COMB
	dw	AP7
	
AP6	db	CONSX
	dw	0
	db	COMB
	dw	AP8
	
AP7	db	CARX
	dw	0
	db	VAR
	db	0,3
	
AP8	db	COMB
	dw	AP9
	db	COMB
	dw	AP11
	
AP9	db	COMB
	dw	AP10
	db	VAR
	db	0,2
	
AP10	db	FCALLX
	dw	0
	db	VAR
	db	0,1

AP11	db	CDRX
	dw	0
	db	VAR
	db	0,3
	
; USED SYMBOLS (A...F)
SMA	db	"A"
SMB	db	"B"
SMC	db	"C"
SMD	db	"D"
SME	db	"E"
SMF	db	"F"

.end